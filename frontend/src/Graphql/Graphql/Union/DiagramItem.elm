-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Graphql.Union.DiagramItem exposing (..)

import Graphql.Internal.Builder.Object as Object
import Graphql.Object
import Graphql.SelectionSet exposing (SelectionSet)
import Graphql.Union


type alias Fragments decodesTo =
    { onItem : SelectionSet decodesTo Graphql.Object.Item
    , onGistItem : SelectionSet decodesTo Graphql.Object.GistItem
    }


{-| Build up a selection for this Union by passing in a Fragments record.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo Graphql.Union.DiagramItem
fragments selections____ =
    Object.exhaustiveFragmentSelection
        [ Object.buildFragment "Item" selections____.onItem
        , Object.buildFragment "GistItem" selections____.onGistItem
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onItem = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onGistItem = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }
