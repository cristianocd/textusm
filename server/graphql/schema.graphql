scalar Time
scalar ItemIdScalar
scalar GistIdScalar

enum Diagram {
  USER_STORY_MAP
  OPPORTUNITY_CANVAS
  BUSINESS_MODEL_CANVAS
  FOURLS
  START_STOP_CONTINUE
  KPT
  USER_PERSONA
  MIND_MAP
  EMPATHY_MAP
  SITE_MAP
  GANTT_CHART
  IMPACT_MAP
  ER_DIAGRAM
  KANBAN
  TABLE
  SEQUENCE_DIAGRAM
  FREEFORM
  USE_CASE_DIAGRAM
}

type Item {
  id: ItemIdScalar!
  title: String!
  text: String!
  thumbnail: String
  diagram: Diagram!
  isPublic: Boolean!
  isBookmark: Boolean!
  createdAt: Time!
  updatedAt: Time!
}

type GistItem {
  id: GistIdScalar!
  url: String!
  title: String!
  thumbnail: String
  diagram: Diagram!
  isBookmark: Boolean!
  createdAt: Time!
  updatedAt: Time!
}

type ShareCondition {
  token: String!
  usePassword: Boolean!
  expireTime: Int!
  allowIPList: [String!]
  allowEmailList: [String!]
}

type Settings {
  font: String!
  width: Int!
  height: Int!
  backgroundColor: String!
  activityColor: Color!
  taskColor: Color!
  storyColor: Color!
  lineColor: String!
  labelColor: String!
  textColor: String
  zoomControl: Boolean
  scale: Float
}

type Color {
  foregroundColor: String!
  backgroundColor: String!
}

union DiagramItem = Item | GistItem

type Query {
  allItems(offset: Int = 0, limit: Int = 30): [DiagramItem!]
  item(id: ItemIdScalar!, isPublic: Boolean = False): Item!
  items(
    offset: Int = 0
    limit: Int = 30
    isBookmark: Boolean = False
    isPublic: Boolean = False
  ): [Item]!
  shareItem(token: String!, password: String): Item!
  ShareCondition(id: ItemIdScalar!): ShareCondition
  gistItem(id: GistIdScalar!): GistItem!
  gistItems(offset: Int = 0, limit: Int = 30): [GistItem]!
  settings(diagram: Diagram!): Settings!
}

input InputItem {
  id: ItemIdScalar
  title: String!
  text: String!
  thumbnail: String
  diagram: Diagram!
  isPublic: Boolean!
  isBookmark: Boolean!
}

input InputShareItem {
  itemID: ItemIdScalar!
  expSecond: Int = 300
  password: String
  allowIPList: [String!] = []
  allowEmailList: [String!] = []
}

input InputGistItem {
  id: GistIdScalar
  title: String!
  thumbnail: String
  diagram: Diagram!
  isBookmark: Boolean!
  url: String!
}

input InputSettings {
  font: String!
  width: Int!
  height: Int!
  backgroundColor: String!
  activityColor: InputColor!
  taskColor: InputColor!
  storyColor: InputColor!
  lineColor: String!
  labelColor: String!
  textColor: String
  zoomControl: Boolean = false
  scale: Float = 1.0
}

input InputColor {
  foregroundColor: String!
  backgroundColor: String!
}

type Mutation {
  save(input: InputItem!, isPublic: Boolean = False): Item!
  delete(itemID: ItemIdScalar!, isPublic: Boolean = False): ItemIdScalar!
  bookmark(itemID: ItemIdScalar!, isBookmark: Boolean!): Item
  share(input: InputShareItem!): String!
  saveGist(input: InputGistItem!): GistItem!
  deleteGist(gistID: GistIdScalar!): GistIdScalar!
  saveSettings(diagram: Diagram!, input: InputSettings!): Settings!
}
